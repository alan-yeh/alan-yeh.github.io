<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:content="http://purl.org/rss/1.0/modules/content/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
    xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
    <channel>
        <atom:link href="rss" rel="self" type="application/rss+xml" />
        
        <title><![CDATA[Alan Yeh - Java-Web]]></title>
        <link>http://yerl.cn/tag/Java-Web</link>
<!--        需要修复-->
        <description><![CDATA[]]></description>
        
        
        <language>zh-cn</language>
        <managingEditor><![CDATA[Alan Yeh]]></managingEditor>
        
<item>
    <title><![CDATA[申请并使用HTTPS]]></title>
    <link>http://yerl.cn/blog/https-cert</link>
    <author><![CDATA[Alan Yeh]]></author>
    <pubDate>Fri, 13 Jan 2017 00:00:00 +0000</pubDate>
    <dc:date>2017-01-13T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/https-cert]]></guid>
    <description><![CDATA[Https证书申请

　　阿里云提供免费的证书申请服务，过程比较简单，记录一下。

　　打开阿里云首页。首先注册并登录。

　　打开产品-&gt;安全-&gt;CA证书服务。


　　点击立即购买。


　　选择免费型DV SSL，然后立即购买。


　　支付成功后，进入证书控制台


　　打开红框标注的证书服务


　　点击补全


　　在框框中填写你要申请的域名地址，然后下一步。


　...]]></description>
</item>

<item>
    <title><![CDATA[apk和ipa文件的MIME类型]]></title>
    <link>http://yerl.cn/blog/imme-for-ipa-apk</link>
    <author><![CDATA[Alan Yeh]]></author>
    <pubDate>Tue, 10 Jan 2017 00:00:00 +0000</pubDate>
    <dc:date>2017-01-10T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/imme-for-ipa-apk]]></guid>
    <description><![CDATA[MIME 类型

　　MIME (Multipurpose Internet Mail Extensions) 是描述消息内容类型的因特网标准。

　　MIME 消息能包含文本、图像、音频、视频以及其他应用程序专用的数据。


以上摘抄自W3School


问题

　　公司有一个app管理平台，用于管理应用的下载、升级等等。

　　但是公司的E人E本的原生浏览器下载apk总是提示【无法打开...]]></description>
</item>

<item>
    <title><![CDATA[Java Web多现场配置]]></title>
    <link>http://yerl.cn/blog/profile-in-web</link>
    <author><![CDATA[Alan Yeh]]></author>
    <pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate>
    <dc:date>2016-12-28T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/profile-in-web]]></guid>
    <description><![CDATA[简介

　　Java Web项目和移动App一样，需要一个程序面对多个现场。以前，项目采用一条主线，多条分支的方式来管理。但是每当现场需要升级的时候、需求与另一个现场重合的时候，往往弄得开发人员手忙脚乱。时间久了之后，项目甚至会出现代码丢失、无法维护等情况。

　　为了解决这个问题，我开发了一个gradle插件，来解决这个问题。

插件引用
repositories {
    mavenL...]]></description>
</item>

<item>
    <title><![CDATA[Gradle管理多子项目]]></title>
    <link>http://yerl.cn/blog/gradle-subprojects-management</link>
    <author><![CDATA[Alan Yeh]]></author>
    <pubDate>Sun, 23 Oct 2016 00:00:00 +0000</pubDate>
    <dc:date>2016-10-23T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/gradle-subprojects-management]]></guid>
    <description><![CDATA[　　当项目达到一定规模时，我们一般会将项目拆分成各个小的项目，以便进行管理。本篇主要介绍Gradle如何便利地管理多子项目。

项目结构

　　拆分项目时，可能会拆分成如下结构:
└── gradle-subprojects-example
    └── service-api
    └── service-impl
    └── web

　　其中，service-impl依赖于se...]]></description>
</item>

<item>
    <title><![CDATA[Spring入门(二)]]></title>
    <link>http://yerl.cn/blog/spring-02</link>
    <author><![CDATA[Alan Yeh]]></author>
    <pubDate>Tue, 27 Sep 2016 00:00:00 +0000</pubDate>
    <dc:date>2016-09-27T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/spring-02]]></guid>
    <description><![CDATA[　　项目使用Gradle作为依赖管理工具。此项目建立在上一篇博客的基础上。

集成beetl

　　使用beetl作为视图引擎。


添加beetl依赖

    //模板引擎
    compile group: &#39;org.beetl&#39;, name: &#39;beetl-core&#39;, version: &#39;2.2.3&#39;


修改src/main/re...]]></description>
</item>

<item>
    <title><![CDATA[Spring入门(一)]]></title>
    <link>http://yerl.cn/blog/spring-01</link>
    <author><![CDATA[Alan Yeh]]></author>
    <pubDate>Mon, 26 Sep 2016 00:00:00 +0000</pubDate>
    <dc:date>2016-09-26T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/spring-01]]></guid>
    <description><![CDATA[　　项目使用Gradle作为依赖管理工具。

添加项目依赖

　　新建Gralde的web项目，添加spring-webmvc依赖，添加servlet-api的依赖。
group &#39;cn.yerl&#39;
version &#39;1.0-SNAPSHOT&#39;

apply plugin: &#39;java&#39;
apply plugin: &#39;war&#39;
...]]></description>
</item>

<item>
    <title><![CDATA[管理Nexus Repository OSS]]></title>
    <link>http://yerl.cn/blog/manage-nexus-repository-oss</link>
    <author><![CDATA[Alan Yeh]]></author>
    <pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate>
    <dc:date>2016-07-17T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/manage-nexus-repository-oss]]></guid>
    <description><![CDATA[目录


支持域名访问


支持域名访问

　　Nexus默认使用8081端口，总是输入IP+端口，略麻烦。因此折腾一下，使用域名来访问Nexus。

修改Nexus配置

　　Nexus默认Context Path是/nexus。如果继续使用这个路径的话，使用域名访问会没办法登录。因此需要先修改Nexus的配置。

/opt/nexus/nexus-2.13.0-01/conf/nexus...]]></description>
</item>

<item>
    <title><![CDATA[搭建Nexus Repository OSS]]></title>
    <link>http://yerl.cn/blog/setup-nexus-repository-oss</link>
    <author><![CDATA[Alan Yeh]]></author>
    <pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate>
    <dc:date>2016-07-17T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/setup-nexus-repository-oss]]></guid>
    <description><![CDATA[　　前面讲到，如何将Java库发布到中央库。Sonatype提供开源项目仓库托管服务，但是过程比较复杂，而且有的项目作为企业内部项目，不合适开源发布。但是又想使用maven的话，那怎么解决呢？那么，这篇博文可以为你解决这个问题。搭建Nexus Repository OOS私服。


搭建环境为Ubuntu 16.04


下载Nexus Repository OSS

　　来到官方下载地址。...]]></description>
</item>

<item>
    <title><![CDATA[Java环境变量]]></title>
    <link>http://yerl.cn/blog/java-environment</link>
    <author><![CDATA[Alan Yeh]]></author>
    <pubDate>Tue, 05 Jul 2016 00:00:00 +0000</pubDate>
    <dc:date>2016-07-05T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/java-environment]]></guid>
    <description><![CDATA[Ubuntu

　　下载jdk，解压到/opt/java/目录下。


我下载的版本是jdk1.8.0_91，所以我的路径是/opt/java/jdk1.8.0_91


　　打开Terminal，编辑/etc/profile文件。
$ nano /etc/profile

　　在最后面添加java环境变量
export JAVA_HOME=/opt/java/jdk1.8.0_91
exp...]]></description>
</item>

<item>
    <title><![CDATA[发布库到Maven Central Repository]]></title>
    <link>http://yerl.cn/blog/publish-library-to-maven-center-repository</link>
    <author><![CDATA[Alan Yeh]]></author>
    <pubDate>Thu, 30 Jun 2016 00:00:00 +0000</pubDate>
    <dc:date>2016-06-30T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/publish-library-to-maven-center-repository]]></guid>
    <description><![CDATA[　　现在Maven几乎成了Java事实上的包管理工具了，Gradle作为后起之秀，也是建立在Maven现有的大量仓库资源之上。使用Maven Central Repository可以很方便地解决第三方库依赖问题。那么，如何将自己开发的包也发布到Maven Central Repository上去呢？

　　Sonatype提供开源项目仓库托管(Open Source Software Rep...]]></description>
</item>


    </channel>
</rss>
